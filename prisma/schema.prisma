// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  firstName      String
  lastName       String
  dateOfBirth    String
  country        String
  userOption     UserOption?
  phoneNumber    String
  schoolName     String?
  email          String           @unique
  password       String
  verified       Boolean?         @default(false)
  otp            Int?
  createdAt      DateTime         @default(now()) @db.Timestamp
  updatedAt      DateTime         @updatedAt
  Wallet         Wallet[]
  TransactionPin TransactionPin[]
  Bvn            Bvn[]
  SetupProfile   SetupProfile[]
  Appointment    Appointment[]
}

model Wallet {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  user    Users  @relation(fields: [usersId], references: [id])
  usersId String @db.ObjectId
}

model TransactionPin {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  pin     String
  user    Users  @relation(fields: [usersId], references: [id])
  usersId String @db.ObjectId
}

model Bvn {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  bvn     Int
  user    Users  @relation(fields: [usersId], references: [id])
  usersId String @db.ObjectId
}

model SetupProfile {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  username     String
  matricNumber String
  user         Users  @relation(fields: [usersId], references: [id])
  usersId      String @db.ObjectId
}

model Appointment {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  user    Users  @relation(fields: [usersId], references: [id])
  usersId String @db.ObjectId
}

enum UserOption {
  Student
  Professional
  Manufacturer
}
